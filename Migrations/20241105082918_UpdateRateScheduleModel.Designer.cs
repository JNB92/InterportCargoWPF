// <auto-generated />
using System;
using InterportCargoWPF.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterportCargoWPF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241105082918_UpdateRateScheduleModel")]
    partial class UpdateRateScheduleModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.33");

            modelBuilder.Entity("InterportCargoWPF.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InterportCargoWPF.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("InterportCargoWPF.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("InterportCargoWPF.Models.Quotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdditionalRequirements")
                        .HasColumnType("TEXT");

                    b.Property<string>("CargoType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContainerQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Discount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("NatureOfJob")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransportationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("InterportCargoWPF.Models.RateSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("FortyFeetContainer")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TwentyFeetContainer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RateSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FortyFeetContainer = 70m,
                            TwentyFeetContainer = 60m,
                            Type = "Wharf Booking Fee"
                        },
                        new
                        {
                            Id = 2,
                            FortyFeetContainer = 120m,
                            TwentyFeetContainer = 80m,
                            Type = "Lift On/Lift Off"
                        },
                        new
                        {
                            Id = 3,
                            FortyFeetContainer = 280m,
                            TwentyFeetContainer = 220m,
                            Type = "Fumigation"
                        },
                        new
                        {
                            Id = 4,
                            FortyFeetContainer = 500m,
                            TwentyFeetContainer = 400m,
                            Type = "LCL Delivery Depot"
                        },
                        new
                        {
                            Id = 5,
                            FortyFeetContainer = 160m,
                            TwentyFeetContainer = 120m,
                            Type = "Tailgate Inspection"
                        },
                        new
                        {
                            Id = 6,
                            FortyFeetContainer = 300m,
                            TwentyFeetContainer = 240m,
                            Type = "Storage Fee"
                        },
                        new
                        {
                            Id = 7,
                            FortyFeetContainer = 100m,
                            TwentyFeetContainer = 70m,
                            Type = "Facility Fee"
                        },
                        new
                        {
                            Id = 8,
                            FortyFeetContainer = 90m,
                            TwentyFeetContainer = 60m,
                            Type = "Wharf Inspection"
                        },
                        new
                        {
                            Id = 9,
                            FortyFeetContainer = 10m,
                            TwentyFeetContainer = 10m,
                            Type = "GST"
                        });
                });

            modelBuilder.Entity("InterportCargoWPF.Models.Notification", b =>
                {
                    b.HasOne("InterportCargoWPF.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("InterportCargoWPF.Models.Quotation", b =>
                {
                    b.HasOne("InterportCargoWPF.Models.Customer", "Customer")
                        .WithMany("Quotations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("InterportCargoWPF.Models.Customer", b =>
                {
                    b.Navigation("Quotations");
                });
#pragma warning restore 612, 618
        }
    }
}
